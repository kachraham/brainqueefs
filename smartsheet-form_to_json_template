import time
import datetime
from datetime import date
import json

import smartsheet
ss = smartsheet.Smartsheet(***YOUR SMARTSHEET KEY***)
ss.errors_as_exceptions(True)

from jira import JIRA
options = {'server': ***YOUR JIRA ENVIRONMENT***}
username = ***YOUR JIRA USERNAME***
api_key = ***YOUR JIRA API KEY***
jira = JIRA(options, basic_auth=(username,api_key))

print('What is the name of the client?')
client_name = input('> ')

#EMAIL DEFAULTS DICTIONARY
email_vars = {
'EMAIL_TEMPLATE1_SUBJECT' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE1_H1' : client_name + " - Activate Your Borrower Wallet Account",
'EMAIL_TEMPLATE1_BODY' : '''DEFAULT LANGUAGE''',

'EMAIL_TEMPLATE2_SUBJECT' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE2_H1' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE2_BODY' : '''DEFAULT LANGUAGE''',

'EMAIL_TEMPLATE3_SUBJECT' : "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE3_H1' : "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE3_BODY' : '''DEFAULT LANGUAGE''',

'EMAIL_TEMPLATE4_SUBJECT' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE4_H1' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE4_BODY' : '''DEFAULT LANGUAGE''',

'EMAIL_TEMPLATE5_SUBJECT' : client_name + "DEFAULT LANGUAGE",
'EMAIL_TEMPLATE5_H1' : client_name + "DEFAULT LANGUAGE", 
'EMAIL_TEMPLATE5_BODY' : '''DEFAULT LANGUAGE''',
}

#SMARTSHEET
email_configurations = 'SMARTSHEET FORM / SHEET ID CONTAINING EMAIL CONFIGURATIONS'
sheet = ss.Sheets.get_sheet(email_configurations)
for row in sheet.rows:
	if row.cells[0].value == client_name:
		global SENDER_EMAIL_ADDRESS, GREETING, SIGNOFF, TEAM_NAME, FOOTER, PHONE_NUMBER, CLIENT_SS_ROW
		CLIENT_SS_ROW = row.id
		SENDER_EMAIL_ADDRESS = str(row.cells[3].value)
		GREETING = str(row.cells[4].value) #GREETING ESTABLISHED MULTIPLE TIMES ACROSS JSON FORMAT; NEED TO IDENTIFY EACH AND SUPPLANT VARIABLE
		SIGNOFF = str(row.cells[5].value)
		TEAM_NAME = str(row.cells[6].value)
		FOOTER = str(row.cells[7].value)
		PHONE_NUMBER = str(row.cells[80].value)
		
		if str(row.cells[8].value) != '':
			email_vars['EMAIL_TEMPLATE1_SUBJECT'] = str(row.cells[8].value)
		if str(row.cells[9].value) != '':
			email_vars['EMAIL_TEMPLATE1_H1'] = str(row.cells[9].value)		
		if str(row.cells[10].value) != '':
			email_vars['EMAIL_TEMPLATE1_BODY'] = str(row.cells[10].value)
		
		if str(row.cells[11].value) != '':
			email_vars['EMAIL_TEMPLATE2_SUBJECT'] = str(row.cells[11].value)
		if str(row.cells[12].value) != '':
			email_vars['EMAIL_TEMPLATE2_H1'] = str(row.cells[12].value)
		if str(row.cells[13].value) != '':
			email_vars['EMAIL_TEMPLATE2_BODY'] = str(row.cells[13].value)	

		if str(row.cells[14].value) != '':
			email_vars['EMAIL_TEMPLATE3_SUBJECT'] = str(row.cells[14].value)
		if str(row.cells[15].value) != '':
			email_vars['EMAIL_TEMPLATE3_H1'] = str(row.cells[15].value)
		if str(row.cells[16].value) != '':
			email_vars['EMAIL_TEMPLATE3_BODY'] = str(row.cells[16].value)

		if str(row.cells[17].value) != '':
			email_vars['EMAIL_TEMPLATE4_SUBJECT'] = str(row.cells[17].value)
		if str(row.cells[18].value) != '':
			email_vars['EMAIL_TEMPLATE4_H1'] = str(row.cells[18].value)
		if str(row.cells[19].value) != '':
			email_vars['EMAIL_TEMPLATE4_BODY'] = str(row.cells[19].value)	

		if str(row.cells[20].value) != '':
			email_vars['EMAIL_TEMPLATE5_SUBJECT'] = str(row.cells[20].value)
		if str(row.cells[21].value) != '':
			email_vars['EMAIL_TEMPLATE5_H1'] = str(row.cells[21].value)
		if str(row.cells[22].value) != '':
			email_vars['EMAIL_TEMPLATE5_BODY'] = str(row.cells[22].value)	

		print('\nEmail configuration elements substituted from '+client_name+' email configurations Smartsheet')

    #CONVERTS THE PARAGRAPHS WITHIN BODY STRINGS INTO MULTIPLE "text" SEGMENTS WITHIN JSON FORMAT
		for email_item, email_content in email_vars.items():
			email_content = email_content.replace("\n\n",'''"\n                  },'''+"\n"+'''                  {'''+"\n"+'''                    "text": "''')
			if str(email_item).endswith('Y'):
				email_content = '''"'''+email_content+'''"\n                  }'''
			email_vars[email_item] = email_content

	    #CONVERTS DICTIONARY INTO VARIABLES REFERENCING STRINGS
		locals().update(email_vars)

	    #INSERT VARIABLES INTO JSON
		email_json = '''
	    {
	      "defaultTemplateContent": {
	        "content": {
	          "greeting": "Hello"
	        },
	        "company": {
	          "email-href": "mailto:'''+SENDER_EMAIL_ADDRESS+'''",
	          "email-info": "'''+SENDER_EMAIL_ADDRESS+'''",
	          "full-name": "'''+CLIENT_LEGAL_NAME+'''",
	          "nmls": "NMLS: '''+NMLS+'''",
	          "phone": "Phone: '''+PHONE_NUMBER+'''",
	          "signature": "'''+SIGNOFF+''',",
	          "team": "'''+TEAM_NAME+'''",
	          "logo": "whitefall-logo.png"
	        }
	      },
	      "templates": [
	        {
	          "templateBaseName": "template1",
	          "actions": {
	            "EMAIL_TEMPLATE_1" : {
	              "subject": "'''+EMAIL_TEMPLATE1_SUBJECT+'''",
	              "content": {
	                "heading": "'''+EMAIL_TEMPLATE1_H1+'''",
	                "btn-label": "Button Label",
	                "btn-link": "{{login-url}}",
	                "cta": "Please contact us if you have questions or need help.",
	                "body": [
	                  {
	                    "text": '''+EMAIL_TEMPLATE1_BODY+'''
	                ]
	              },
	              "applicant": {
	                "first-name": "{{applicant-first-name}}"
	              },
	              "loan-officer": {
	                "loan-officer-first-name": "{{loan-officer-first-name?}}",
	                "loan-officer-last-name": "{{loan-officer-last-name?}}",
	                "loan-officer-email": "{{loan-officer-email?}}",
	                "loan-officer-title": "{{loan-officer-title?}}",
	                "loan-officer-phone": "{{loan-officer-phone?}}",
	                "loan-officer-nmls": "{{loan-officer-nmls?}}"
	              }
	            },
	            "EMAIL_TEMPLATE_2" : {
	              "subject": "'''+EMAIL_TEMPLATE2_SUBJECT+'''",
	              "content": {
	                "heading": "'''+EMAIL_TEMPLATE2_H1+'''",
	                "btn-label": "Button Label",
	                "btn-link": "{{login-url}}",
	                "body": [
	                  {
	                    "text": '''+EMAIL_TEMPLATE2_BODY+'''
	                ]
	              },
	              "applicant": {
	                "first-name": "{{applicant-first-name}}"
	              },
	              "loan-officer": {
	                "loan-officer-first-name": "{{loan-officer-first-name?}}",
	                "loan-officer-last-name": "{{loan-officer-last-name?}}",
	                "loan-officer-email": "{{loan-officer-email?}}",
	                "loan-officer-title": "{{loan-officer-title?}}",
	                "loan-officer-phone": "{{loan-officer-phone?}}",
	                "loan-officer-nmls": "{{loan-officer-nmls?}}"
	              }
	            },
	            "EMAIL_TEMPLATE_3" : {
	              "subject": "'''+EMAIL_TEMPLATE3_SUBJECT+'''",
	              "content": {
	                "heading": "'''+EMAIL_TEMPLATE3_H1+'''",
	                "btn-label": "Button Label",
	                "btn-link": "{{login-url}}",
	                "body": [
	                  {
	                    "text": '''+EMAIL_TEMPLATE3_BODY+'''
	                ]
	              },
	              "applicant": {
	                "first-name": "{{applicant-first-name}}"
	              },
	              "loan-officer": {
	                "loan-officer-first-name": "{{loan-officer-first-name?}}",
	                "loan-officer-last-name": "{{loan-officer-last-name?}}",
	                "loan-officer-email": "{{loan-officer-email?}}",
	                "loan-officer-title": "{{loan-officer-title?}}",
	                "loan-officer-phone": "{{loan-officer-phone?}}",
	                "loan-officer-nmls": "{{loan-officer-nmls?}}"
	              }
	            },
	            "EMAIL_TEMPLATE_4" : {
	              "subject": "'''+EMAIL_TEMPLATE4_SUBJECT+'''",
	              "content": {
	                "heading": "'''+EMAIL_TEMPLATE4_H1+'''",
	                "btn-label": "Confirm Email",
	                "btn-link": "{{url}}",
	                "body": [
	                  {
	                    "text": '''+EMAIL_TEMPLATE4_BODY+'''
	                ]
	              },
	              "applicant": {
	                "first-name": "{{applicant-first-name}}"
	              },
	              "loan-officer": {
	                "loan-officer-first-name": "{{loan-officer-first-name?}}",
	                "loan-officer-last-name": "{{loan-officer-last-name?}}",
	                "loan-officer-email": "{{loan-officer-email?}}",
	                "loan-officer-title": "{{loan-officer-title?}}",
	                "loan-officer-phone": "{{loan-officer-phone?}}",
	                "loan-officer-nmls": "{{loan-officer-nmls?}}"
	              }
	            },
	            "EMAIL_TEMPLATE_5" : {
	              "subject": "'''+EMAIL_TEMPLATE5_SUBJECT+'''",
	              "content": {
	                "heading": "'''+EMAIL_TEMPLATE5_H1+'''",
	                "btn-label": "Open Borrower Wallet",
	                "btn-link": "{{bw-login-url}}",
	                "body": [
	                  {
	                    "text": '''+EMAIL_TEMPLATE5_BODY+'''
	                ]
	              },
	              "applicant": {
	                "first-name": "{{applicant-first-name}}"
	              },
	              "loan-officer": {
	                "loan-officer-first-name": "{{loan-officer-first-name?}}",
	                "loan-officer-last-name": "{{loan-officer-last-name?}}",
	                "loan-officer-email": "{{loan-officer-email?}}",
	                "loan-officer-title": "{{loan-officer-title?}}",
	                "loan-officer-phone": "{{loan-officer-phone?}}",
	                "loan-officer-nmls": "{{loan-officer-nmls?}}"
	              }
	            }
	          }
	        }
	      ]
	    }
	    '''
	    
		json_file_name = client_name+'_email_configs.json'
		with open (json_file_name,'w') as outfile:
			outfile.write(email_json)
		json_file_path = 'FILEPATH'+json_file_name
		updated_attachment = ss.Attachments.attach_file_to_row(email_configurations,CLIENT_SS_ROW,(json_file_name, open(json_file_path, 'rb'), 'application/msword'))
		print('\nFile attached to '+client_name+' row in Email Configurations in Smartsheet')

	    #JIRA - DETERMINE FIELDS FOR ASSOCIATED JIRA TCIKET
		client_email = {
			#TICKET NAME: (Client Name): Requested Email Configurations
				'project':{'key':'PROJECT'},
				'summary': F"{client_name}: Requested Email Configurations",
				'description': F'''
				{client_name} has specified their email configrations in the attached JSON file. Please ensure the all emails generated all associated environments reflect these configurations.
				
	    		[^{json_file_name}]
				'''
				'issuetype':{'name':'ISSUE TYPE'}
			}

		#CREATE JIRA TICKET AND ATTACH JSON FILE TO TICKET
		email_config_jira = jira.create_issue(fields=client_email)
		attach = json_file_path
		jira.add_attachment(issue=email_config_jira, attachment=attach,filename=json_file_name)

		print('\nTicket '+str(email_config_jira)+' created.')
